import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as s}from"./app-C_LzcjlM.js";const i={},l=s(`<h2 id="_1-从-github-或者-gitee-上拉取-bouffalo-sdk" tabindex="-1"><a class="header-anchor" href="#_1-从-github-或者-gitee-上拉取-bouffalo-sdk"><span>1. 从 GitHub 或者 Gitee 上拉取 bouffalo_sdk</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 拉取 bouffalo_sdk 国内镜像请将 github 更换成 gitee</span>
<span class="token function">git</span> clone https://github.com/bouffalolab/bouffalo_sdk.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-安装依赖" tabindex="-1"><a class="header-anchor" href="#_2-安装依赖"><span>2. 安装依赖</span></a></h2><p>BouffaloSDK 编译需要用到 gcc 工具链，cmake ， make，ninja（可选，用于加速代码编译）构建系统，下面讲述如何安装和配置。</p><ol><li>安装 gcc-toolchain</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~
<span class="token function">git</span> clone https://gitee.com/bouffalolab/toolchain_gcc_t-head_linux.git
<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-rf</span> toolchain_gcc_t-head_linux/ /usr/bin
<span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=<span class="token entity" title="\\&quot;">\\&quot;</span><span class="token environment constant">$PATH</span>:/usr/bin/toolchain_gcc_t-head_linux/bin<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>  <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安装 cmake</li></ol><p>无需安装， bouffalo_sdk/tools/cmake 目录下已经提供 linux 版本 cmake 工具</p><ol start="3"><li>安装 make</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">make</span> <span class="token parameter variable">-y</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>安装 ninja（可选）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ninja-build <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>检查环境</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token parameter variable">-v</span>

 GNU Make <span class="token number">4.1</span>
 Built <span class="token keyword">for</span> x86_64-pc-linux-gnu
 Copyright <span class="token punctuation">(</span>C<span class="token punctuation">)</span> <span class="token number">1988</span>-2014 Free Software Foundation, Inc.
 License GPLv3+: GNU GPL version <span class="token number">3</span> or later <span class="token operator">&lt;</span>http://gnu.org/licenses/gpl.html<span class="token operator">&gt;</span>
 This is <span class="token function">free</span> software: you are <span class="token function">free</span> to change and redistribute it.
 There is NO WARRANTY, to the extent permitted by law.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
riscv64-unknown-elf-gcc <span class="token parameter variable">-v</span>

 Using built-in specs.
 <span class="token assign-left variable">COLLECT_GCC</span><span class="token operator">=</span>riscv64-unknown-elf-gcc
 <span class="token assign-left variable">COLLECT_LTO_WRAPPER</span><span class="token operator">=</span>/mnt/d/EmbeddedSoftware/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/bin/<span class="token punctuation">..</span>/libexec/gcc/riscv64-unknown-elf/10.2.0/lto-wrapper
 Target: riscv64-unknown-elf
 Configured with: /lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/./source/riscv/riscv-gcc/configure <span class="token parameter variable">--target</span><span class="token operator">=</span>riscv64-unknown-elf --with-gmp<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/build-Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/lib-for-gcc-x86_64-linux --with-mpfr<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/build-Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/lib-for-gcc-x86_64-linux --with-mpc<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/build-Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/lib-for-gcc-x86_64-linux --with-libexpat-prefix<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/build-Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/lib-for-gcc-x86_64-linux --with-libmpfr-prefix<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/build-Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/lib-for-gcc-x86_64-linux --with-pkgversion<span class="token operator">=</span><span class="token string">&#39;Xuantie-900 elf newlib gcc Toolchain V2.2.5 B-20220323&#39;</span> <span class="token assign-left variable">CXXFLAGS</span><span class="token operator">=</span><span class="token string">&#39;-g -O2 -DTHEAD_VERSION_NUMBER=2.2.5&#39;</span> --enable-libgcctf <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5 --disable-shared --disable-threads --enable-languages<span class="token operator">=</span>c,c++ --with-system-zlib --enable-tls --with-newlib --with-sysroot<span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/build-riscv-gcc-riscv64-unknown-elf/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.5/riscv64-unknown-elf --with-native-system-header-dir<span class="token operator">=</span>/include --disable-libmudflap --disable-libssp --disable-libquadmath --disable-libgomp --disable-nls --disable-tm-clone-registry <span class="token parameter variable">--src</span><span class="token operator">=</span>/lhome/software/toolsbuild/slave2/workspace/Toolchain/build-gnu-riscv_4/./source/riscv/riscv-gcc --enable-multilib --with-abi<span class="token operator">=</span>lp64d --with-arch<span class="token operator">=</span>rv64gcxthead <span class="token string">&#39;CFLAGS_FOR_TARGET=-Os   -mcmodel=medany&#39;</span> <span class="token string">&#39;CXXFLAGS_FOR_TARGET=-Os   -mcmodel=medany&#39;</span>
 Thread model: single
 Supported LTO compression algorithms: zlib
 gcc version <span class="token number">10.2</span>.0 <span class="token punctuation">(</span>Xuantie-900 elf newlib gcc Toolchain V2.2.5 B-20220323<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译代码" tabindex="-1"><a class="header-anchor" href="#编译代码"><span>编译代码</span></a></h2>`,16),t=[l];function o(c,r){return e(),n("div",null,t)}const u=a(i,[["render",o],["__file","linux_bouffalo_sdk.html.vue"]]),b=JSON.parse(`{"path":"/posts/embedded/linux_bouffalo_sdk.html","title":"在Ubuntu上搭建安信可博流SDK开发环境","lang":"zh-CN","frontmatter":{"title":"在Ubuntu上搭建安信可博流SDK开发环境","icon":"fas fa-microchip","date":"2024-06-12T00:00:00.000Z","category":["嵌入式","环境搭建","安信可"],"tag":["博流","Ubuntu","安信可"],"description":"1. 从 GitHub 或者 Gitee 上拉取 bouffalo_sdk 2. 安装依赖 BouffaloSDK 编译需要用到 gcc 工具链，cmake ， make，ninja（可选，用于加速代码编译）构建系统，下面讲述如何安装和配置。 安装 gcc-toolchain 安装 cmake 无需安装， bouffalo_sdk/tools/cmak...","head":[["meta",{"property":"og:url","content":"https://noly1990.github.io/noly_station/noly_station/posts/embedded/linux_bouffalo_sdk.html"}],["meta",{"property":"og:site_name","content":"Noly's Station"}],["meta",{"property":"og:title","content":"在Ubuntu上搭建安信可博流SDK开发环境"}],["meta",{"property":"og:description","content":"1. 从 GitHub 或者 Gitee 上拉取 bouffalo_sdk 2. 安装依赖 BouffaloSDK 编译需要用到 gcc 工具链，cmake ， make，ninja（可选，用于加速代码编译）构建系统，下面讲述如何安装和配置。 安装 gcc-toolchain 安装 cmake 无需安装， bouffalo_sdk/tools/cmak..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T07:06:38.000Z"}],["meta",{"property":"article:author","content":"Noly"}],["meta",{"property":"article:tag","content":"博流"}],["meta",{"property":"article:tag","content":"Ubuntu"}],["meta",{"property":"article:tag","content":"安信可"}],["meta",{"property":"article:published_time","content":"2024-06-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-18T07:06:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在Ubuntu上搭建安信可博流SDK开发环境\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-18T07:06:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Noly\\",\\"url\\":\\"/intro\\"}]}"]]},"headers":[{"level":2,"title":"1. 从 GitHub 或者 Gitee 上拉取 bouffalo_sdk","slug":"_1-从-github-或者-gitee-上拉取-bouffalo-sdk","link":"#_1-从-github-或者-gitee-上拉取-bouffalo-sdk","children":[]},{"level":2,"title":"2. 安装依赖","slug":"_2-安装依赖","link":"#_2-安装依赖","children":[]},{"level":2,"title":"编译代码","slug":"编译代码","link":"#编译代码","children":[]}],"git":{"createdTime":1721286398000,"updatedTime":1721286398000,"contributors":[{"name":"n100","email":"n100@example.com","commits":1}]},"readingTime":{"minutes":1.74,"words":522},"filePathRelative":"posts/embedded/linux_bouffalo_sdk.md","localizedDate":"2024年6月12日","excerpt":"<h2>1. 从 GitHub 或者 Gitee 上拉取 bouffalo_sdk</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 拉取 bouffalo_sdk 国内镜像请将 github 更换成 gitee</span>\\n<span class=\\"token function\\">git</span> clone https://github.com/bouffalolab/bouffalo_sdk.git\\n</code></pre></div>","autoDesc":true}`);export{u as comp,b as data};
