import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as r,c as d,a as e,f as s,d as n,b as o,e as i}from"./app-C_LzcjlM.js";const p={},c=e("h1",{id:"远程esp-idf的安装和使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#远程esp-idf的安装和使用"},[e("span",null,"远程ESP-IDF的安装和使用")])],-1),u={href:"https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/get-started/linux-macos-setup.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://lckfb.com/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://lckfb.com/project/detail/lckfb-esp32s3r8n8?param=baseInfo",target:"_blank",rel:"noopener noreferrer"},v={href:"/posts/utility/win_rdp_intro.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://zhuanlan.zhihu.com/p/412736012",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/coder/code-server",target:"_blank",rel:"noopener noreferrer"},f=i(`<p>我打算将ESP-IDF安装在我的Ubuntu服务器上，官方有完整说明，已经很详细，这里做一个简单记录。</p><h2 id="安装准备" tabindex="-1"><a class="header-anchor" href="#安装准备"><span>安装准备</span></a></h2><ul><li>安装需要的软件和库</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token function">wget</span> flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="获取esp-idf" tabindex="-1"><a class="header-anchor" href="#获取esp-idf"><span>获取esp-idf</span></a></h2><ul><li>根据自己需要的版本下载idf的github仓库</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/esp
<span class="token builtin class-name">cd</span> ~/esp
<span class="token function">git</span> clone <span class="token parameter variable">-b</span> v5.2.1 <span class="token parameter variable">--recursive</span> https://github.com/espressif/esp-idf.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置esp-idf" tabindex="-1"><a class="header-anchor" href="#设置esp-idf"><span>设置esp-idf</span></a></h2><ul><li>国内用户使用espressif自建源加速(可选)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">IDF_GITHUB_ASSETS</span><span class="token operator">=</span><span class="token string">&quot;dl.espressif.cn/github_assets&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>完成以后进行安装流程</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/esp/esp-idf
./install.sh esp32,esp32s3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装会持续相当长一段时间，主要取决于网速，因为需要下载和安装的文件很多且很大。</p><h2 id="设置环境" tabindex="-1"><a class="header-anchor" href="#设置环境"><span>设置环境</span></a></h2><ul><li>使用py虚拟环境切换idf工具是否生效</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">.</span> <span class="token environment constant">$HOME</span>/esp/esp-idf/export.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>可以在.bashrc或者profile里添加alias以快速获取esp-idf的工具环境</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">get_idf</span><span class="token operator">=</span><span class="token string">&#39;. $HOME/esp/esp-idf/export.sh&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> .bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><ul><li>复制示例程序(idf安装目录中有examples目录，可以自行查看所有示例程序)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/somedir

<span class="token function">cp</span> <span class="token parameter variable">-r</span> <span class="token variable">$IDF_PATH</span>/examples/get-started/hello_world <span class="token builtin class-name">.</span>

<span class="token builtin class-name">cd</span> <span class="token builtin class-name">cd</span> ~/somedir/hello_world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>确保使用idf.py这些命令前，激活idf的虚拟环境，也就是在shell里使用刚才alias的get_idf或者直接. $HOME/esp/esp-idf/export.sh</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>idf.py set-target esp32

<span class="token comment"># 命令行界面化的工程配置工具</span>
idf.py menuconfig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/_images/project-configuration.png" alt="工程配置" tabindex="0" loading="lazy"><figcaption>工程配置</figcaption></figure><ul><li>编译工程</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>idf.py build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>连接物理设备以后，进行烧录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>idf.py <span class="token parameter variable">-p</span> PORT flash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>监视输出</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>idf.py <span class="token parameter variable">-p</span> PORT monitor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">注意</p><p>也可以运行以下命令，一次性执行构建、烧录和监视过程：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>idf.py <span class="token parameter variable">-p</span> PORT flash monitor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h2 id="idf-监视器的使用" tabindex="-1"><a class="header-anchor" href="#idf-监视器的使用"><span>IDF 监视器的使用</span></a></h2>`,33),_={href:"https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-guides/tools/idf-monitor.html",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="后续一些常见问题" tabindex="-1"><a class="header-anchor" href="#后续一些常见问题"><span>后续一些常见问题</span></a></h2><ul><li>在 Linux 中添加用户到 dialout 或 uucp 组</li></ul><p>如果非root用户操作USB设备遇到权限问题，当前登录用户应当可以通过 USB 对串口进行读写操作。在多数 Linux 版本中，都可以通过以下命令，将用户添加到 dialout 组，从而获许读写权限:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> dialout <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Arch Linux 中，需要通过以下命令将用户添加到 uucp 组中:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> uucp <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>操作完成以后最好重启一次，确保权限生效</p><ul><li>针对远程服务器，WSL，Docker等非本地设备，如何通过网络烧录调试远程物理设备的方法，一共两种</li></ul>`,8),x={href:"https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/api-guides/tools/idf-docker-image.html?highlight=docker#using-remote-serial-port",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/espressif/esptool/releases",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/espressif/esptool/releases/download/v4.7.0/esptool-v4.7.0-win64.zip",target:"_blank",rel:"noopener noreferrer"},E=i(`<p>解压以后，找到里面的esp_rfc2217_server.exe的这个程序，</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>
esp_rfc2217_server <span class="token operator">-</span>v <span class="token operator">-</span>p 4000 COM3

<span class="token comment"># 或者在文件夹下运行</span>

<span class="token punctuation">.</span>\\esp_rfc2217_server<span class="token punctuation">.</span>exe <span class="token operator">-</span>v <span class="token operator">-</span>p 4000 COM3

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后，在远程服务器，WSL 或者 Docker内，可以通过以下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
idf.py <span class="token parameter variable">-b</span> <span class="token number">1500000</span> <span class="token parameter variable">--port</span> <span class="token string">&#39;rfc2217://{client-host}:4000?ign_set_control&#39;</span> flash

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在其他端可以直接使用相应的.py文件进行操作</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
esp_rfc2217_server.py <span class="token parameter variable">-p</span> <span class="token number">4000</span> /dev/ttyUSB1

esptool.py <span class="token parameter variable">--port</span> rfc2217://ADDRESS_OF_SERVER:4000?ign_set_control flash_id

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>另一种是使用USB/IP的方式，直接将本地的USB设备通过网络绑定到远程的服务器，WSL或者Docker中</li></ol>`,7),P={href:"/posts/backend/usb_ip_intro.html",target:"_blank",rel:"noopener noreferrer"},D=e("p",null,"将USB设备绑定到远端以后，就可以使用相应的idf工具进行板子的烧写和调试了，基本就和本地设备差不多",-1);function I(N,w){const a=t("ExternalLinkIcon");return r(),d("div",null,[c,e("blockquote",null,[e("p",null,[s("相关内容在"),e("a",u,[s("乐鑫的文档"),n(a)]),s("里已经有完整的介绍")])]),o(" more "),e("p",null,[s("前段时间，在"),e("a",h,[s("立创开发板"),n(a)]),s("入手了一块"),e("a",m,[s("ESP32S3R8N8开发板"),n(a)]),s("，官方推荐了多种开发环境，但是因为我自己有很多电脑，很多开发环境，而且经常换设备和环境，所有想要将ESP-IDF的开发环境云化。我现在常用的云化方案有几种种：")]),e("ul",null,[e("li",null,[s("Windows远程桌面 - "),e("a",v,[s("我的文章"),n(a)])]),e("li",null,[s("VScode Remote的方案 - "),e("a",b,[s("相关教程"),n(a)])]),e("li",null,[s("Code-Server方案 - "),e("a",g,[s("Github"),n(a)])])]),f,e("p",null,[e("a",_,[s("官方指南"),n(a)])]),k,e("ol",null,[e("li",null,[s("乐鑫提供了一种"),e("a",x,[s("解决方法"),n(a)]),s("，可自行前往查看，我这里做简单的介绍")])]),e("p",null,[s("前往"),e("a",S,[s("esptool"),n(a)]),s("的release界面下载最新版本的esp工具应用，挑选匹配自己系统的程序包，以Windows电脑为例，我们下载"),e("a",y,[s("esptool-v4.7.0-win64.zip "),n(a)]),s("这个压缩包")]),E,e("p",null,[s("详见"),e("a",P,[s("USB/IP的安装和使用"),n(a)])]),D])}const z=l(p,[["render",I],["__file","esp_idf_installation.html.vue"]]),R=JSON.parse(`{"path":"/posts/embedded/esp/esp_idf_installation.html","title":"远程 ESP-IDF 的安装和使用","lang":"zh-CN","frontmatter":{"title":"远程 ESP-IDF 的安装和使用","icon":"fas fa-microchip","date":"2024-03-17T00:00:00.000Z","category":["嵌入式"],"tag":["ESP32","嘉立创","Linux"],"description":"远程ESP-IDF的安装和使用 相关内容在乐鑫的文档里已经有完整的介绍 前段时间，在立创开发板入手了一块ESP32S3R8N8开发板，官方推荐了多种开发环境，但是因为我自己有很多电脑，很多开发环境，而且经常换设备和环境，所有想要将ESP-IDF的开发环境云化。我现在常用的云化方案有几种种： Windows远程桌面 - 我的文章 VScode Remot...","head":[["meta",{"property":"og:url","content":"https://noly1990.github.io/noly_station/noly_station/posts/embedded/esp/esp_idf_installation.html"}],["meta",{"property":"og:site_name","content":"Noly's Station"}],["meta",{"property":"og:title","content":"远程 ESP-IDF 的安装和使用"}],["meta",{"property":"og:description","content":"远程ESP-IDF的安装和使用 相关内容在乐鑫的文档里已经有完整的介绍 前段时间，在立创开发板入手了一块ESP32S3R8N8开发板，官方推荐了多种开发环境，但是因为我自己有很多电脑，很多开发环境，而且经常换设备和环境，所有想要将ESP-IDF的开发环境云化。我现在常用的云化方案有几种种： Windows远程桌面 - 我的文章 VScode Remot..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/_images/project-configuration.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T07:06:38.000Z"}],["meta",{"property":"article:author","content":"Noly"}],["meta",{"property":"article:tag","content":"ESP32"}],["meta",{"property":"article:tag","content":"嘉立创"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-18T07:06:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"远程 ESP-IDF 的安装和使用\\",\\"image\\":[\\"https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/_images/project-configuration.png\\"],\\"datePublished\\":\\"2024-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-18T07:06:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Noly\\",\\"url\\":\\"/intro\\"}]}"]]},"headers":[{"level":2,"title":"安装准备","slug":"安装准备","link":"#安装准备","children":[]},{"level":2,"title":"获取esp-idf","slug":"获取esp-idf","link":"#获取esp-idf","children":[]},{"level":2,"title":"设置esp-idf","slug":"设置esp-idf","link":"#设置esp-idf","children":[]},{"level":2,"title":"设置环境","slug":"设置环境","link":"#设置环境","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"IDF 监视器的使用","slug":"idf-监视器的使用","link":"#idf-监视器的使用","children":[]},{"level":2,"title":"后续一些常见问题","slug":"后续一些常见问题","link":"#后续一些常见问题","children":[]}],"git":{"createdTime":1721286398000,"updatedTime":1721286398000,"contributors":[{"name":"n100","email":"n100@example.com","commits":1}]},"readingTime":{"minutes":3.62,"words":1086},"filePathRelative":"posts/embedded/esp/esp_idf_installation.md","localizedDate":"2024年3月17日","excerpt":"\\n<blockquote>\\n<p>相关内容在<a href=\\"https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/get-started/linux-macos-setup.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">乐鑫的文档</a>里已经有完整的介绍</p>\\n</blockquote>\\n","autoDesc":true}`);export{z as comp,R as data};
