import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c,a,f as s,d as e,e as t}from"./app-C_LzcjlM.js";const o={},d=a("blockquote",null,[a("p",null,"本文介绍如何安装pyOCD以及pyOCD的简单使用。")],-1),r={href:"https://pyocd.io/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/pyocd/pyOCD",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="安装pyocd" tabindex="-1"><a class="header-anchor" href="#安装pyocd"><span>安装pyOCD</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 安装pyOCD， 国内清华源
pip <span class="token function">install</span> pyOCD <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 某些情况下， 安装pyOCD会遇到libusb的依赖问题， 需要先安装libusb
 pip <span class="token function">install</span> libusb <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pyocd <span class="token parameter variable">--help</span>

usage: pyocd <span class="token punctuation">[</span>-h<span class="token punctuation">]</span> <span class="token punctuation">[</span>-V<span class="token punctuation">]</span> <span class="token punctuation">[</span>--help-options<span class="token punctuation">]</span>  <span class="token punctuation">..</span>.
PyOCD debug tools <span class="token keyword">for</span> Arm Cortex devices
options:
  -h, <span class="token parameter variable">--help</span>       show this <span class="token builtin class-name">help</span> message and <span class="token builtin class-name">exit</span>
  -V, <span class="token parameter variable">--version</span>    show program&#39;s version number and <span class="token builtin class-name">exit</span>
  --help-options   Display available session options.
subcommands:
    commander <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>
                   Interactive <span class="token builtin class-name">command</span> console.
    erase          Erase entire device flash or specified sectors.
    load <span class="token punctuation">(</span>flash<span class="token punctuation">)</span>   Load one or <span class="token function">more</span> images into target device memory.
    gdbserver <span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>
                   Run the gdb remote server<span class="token punctuation">(</span>s<span class="token punctuation">)</span>.
    json           Output information as JSON.
    list           List information about probes, targets, or boards.
    pack           Manage CMSIS-Packs <span class="token keyword">for</span> target support.
    reset          Reset a target device.
    server         Run debug probe server.
    rtt            SEGGER RTT Viewer/Logger.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pyocd pack 用于pack包的管理， 包括安装、卸载、更新、搜索等。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
pyocd pack <span class="token parameter variable">--help</span>

usage: pyocd <span class="token punctuation">[</span>-c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-u<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-f GLOB<span class="token punctuation">]</span> <span class="token punctuation">[</span>-i GLOB<span class="token punctuation">]</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span> <span class="token punctuation">[</span>-H<span class="token punctuation">]</span>  <span class="token punctuation">..</span>.
Manage CMSIS-Packs <span class="token keyword">for</span> target support.
subcommands:
    clean               Delete the pack index and all installed packs.
    <span class="token function">find</span>                Report pack<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">in</span> the index containing matching device part numbers.
    <span class="token function">install</span>             Download and <span class="token function">install</span> pack<span class="token punctuation">(</span>s<span class="token punctuation">)</span> containing matching device part numbers.
    show                Show the list of installed packs.
    update              Update the pack index.
pack operations:
  -c, <span class="token parameter variable">--clean</span>           <span class="token punctuation">(</span>Deprecated<span class="token punctuation">;</span> use clean subcommand.<span class="token punctuation">)</span> Erase all stored pack information.
  -u, <span class="token parameter variable">--update</span>          <span class="token punctuation">(</span>Deprecated<span class="token punctuation">;</span> use update subcommand.<span class="token punctuation">)</span> Update the pack index.
  -s, <span class="token parameter variable">--show</span>            <span class="token punctuation">(</span>Deprecated<span class="token punctuation">;</span> use show subcommand.<span class="token punctuation">)</span> Show the list of installed packs.
  <span class="token parameter variable">-f</span> GLOB, <span class="token parameter variable">--find</span> GLOB  <span class="token punctuation">(</span>Deprecated<span class="token punctuation">;</span> use <span class="token function">find</span> subcommand.<span class="token punctuation">)</span> Report pack<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">in</span> the index containing matching device part numbers.
  <span class="token parameter variable">-i</span> GLOB, <span class="token parameter variable">--install</span> GLOB
                        <span class="token punctuation">(</span>Deprecated<span class="token punctuation">;</span> use <span class="token function">install</span> subcommand.<span class="token punctuation">)</span> Download and <span class="token function">install</span> pack<span class="token punctuation">(</span>s<span class="token punctuation">)</span> containing matching device part numbers.
pack options:
  -n, --no-download     Just list the pack<span class="token punctuation">(</span>s<span class="token punctuation">)</span> that would be downloaded, don<span class="token string">&#39;t actually download anything.
  -H, --no-header       Don&#39;</span>t print a table header.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一般使用" tabindex="-1"><a class="header-anchor" href="#一般使用"><span>一般使用</span></a></h2><p>一般来说，我们需要针对不同的芯片，安装对应的pack包。安装完成以后再使用pyocd进行烧录或者调试。</p><p>这里我们拿最经典的STM32F103C8T6为例， 通过-f参数，搜索查看有匹配的pack包。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pyocd pack <span class="token parameter variable">-f</span> STM32F103C8
// 会有如下结果
  Part          Vendor               Pack                 Version   Installed
-------------------------------------------------------------------------------
  STM32F103C8   STMicroelectronics   Keil.STM32F1xx_DFP   <span class="token number">2.4</span>.1     False

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过-i参数，指定安装的pack包。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pyocd pack <span class="token parameter variable">-i</span> STM32F103C8
// 会有如下结果
Downloading packs <span class="token punctuation">(</span>press Control-C to cancel<span class="token punctuation">)</span>:
    Keil.STM32F1xx_DFP.2.4.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于在线安装实在太慢了，所以我们通过手动安装pack包的方法安装。</p>`,14),m={href:"https://www.keil.arm.com/packs/stm32f1xx_dfp-keil/versions/",target:"_blank",rel:"noopener noreferrer"},b=t(`<p>使用一些下载工具把 STM32F1xx_DFP 2.4.1 的pack包下载下来。</p><p>前往</p><p><code>C:\\Users\\{username}\\AppData\\Local\\cmsis-pack-manager\\cmsis-pack-manager\\Keil\\STM32F1xx_DFP</code></p><p>目录，如果没有这个目录，就逐级手动创建，正常情况下只要运行过<code>pyocd pack -i STM32F103C8</code>应该都会有这个目录。</p><p>将前面下载下来的<code>Keil.STM32F1xx_DFP.2.4.1.pack</code>复制到目标目录，并修改文件名称为<code>2.4.1.pack</code>。</p><p>在<code>C:\\Users\\{username}\\AppData\\Local\\cmsis-pack-manager\\cmsis-pack-manager</code>目录下查看，有没有一个文件名为<code>Keil.STM32F1xx_DFP.2.4.1.pdsc</code>的文件，如果有就结束了。</p><p>如果没有，将刚才的2.4.1.pack用解压软件解压（zip），将解压后文件里面的<code>Keil.STM32F1xx_DFP.pdsc</code>的文件复制到刚才的目录并修改文件名为<code>Keil.STM32F1xx_DFP.2.4.1.pdsc</code>。</p><p>至此，pack包手动安装完成。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
pyocd pack show
// 会有如下结果
  Pack                          Version
-----------------------------------------
  MindMotion.MM32F103x8xB_DFP   <span class="token number">1.4</span>.8
  TexasInstruments.MSPM0L_DFP   <span class="token number">1.2</span>.1
  Keil.STM32F1xx_DFP            <span class="token number">2.4</span>.1 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果看到2.4.1的pack包，就说明安装成功了。</p><h2 id="烧录" tabindex="-1"><a class="header-anchor" href="#烧录"><span>烧录</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 列出所有支持的target
pyocd list <span class="token parameter variable">-t</span>
// 如果刚才pack包安装成功则应该有以下条目
  Name           Vendor         Part Number        Families                Source
stm32f103c8 STMicroelectronics  STM32F103C8  STM32F1 Series, STM32F103      pack
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>// 使用flash命令进行烧录
pyocd flash <span class="token parameter variable">-t</span> stm32f103c8 ./stm32f103c8t6.bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="不安装-指定pack包烧录" tabindex="-1"><a class="header-anchor" href="#不安装-指定pack包烧录"><span>不安装，指定pack包烧录</span></a></h2><p>其实也可以不安装pack包，直接指定特定的pack包，指定特定的target进行烧录。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
pyocd <span class="token parameter variable">--pack</span> ./somepack.pack <span class="token parameter variable">-t</span> aim_target ./somebin.bin

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他常见问题" tabindex="-1"><a class="header-anchor" href="#其他常见问题"><span>其他常见问题</span></a></h2><ol><li>python 版本问题</li></ol><p>至少需要python3.7以上版本</p><ol start="2"><li>pyocd安装pack包失败</li></ol><p>网络问题，且第一次安装会下载所有支持的pack包列表，时间较长，请耐心等待。建议使用手动安装特定的pack包。或者使用魔法。</p>`,21);function k(h,g){const n=p("ExternalLinkIcon");return l(),c("div",null,[d,a("p",null,[a("a",r,[s("官方网站"),e(n)])]),a("p",null,[a("a",u,[s("开源地址"),e(n)])]),v,a("p",null,[a("a",m,[s("STM32F103C8的pack包下载地址"),e(n)])]),b])}const x=i(o,[["render",k],["__file","pyocd_installation.html.vue"]]),D=JSON.parse(`{"path":"/posts/embedded/pyocd_installation.html","title":"pyOCD的安装","lang":"zh-CN","frontmatter":{"title":"pyOCD的安装","icon":"fas fa-microchip","date":"2024-07-14T00:00:00.000Z","category":["嵌入式","调试工具"],"tag":["Python","pyOCD"],"description":"本文介绍如何安装pyOCD以及pyOCD的简单使用。 官方网站 开源地址 安装pyOCD 常用命令 pyocd pack 用于pack包的管理， 包括安装、卸载、更新、搜索等。 一般使用 一般来说，我们需要针对不同的芯片，安装对应的pack包。安装完成以后再使用pyocd进行烧录或者调试。 这里我们拿最经典的STM32F103C8T6为例， 通过-f参...","head":[["meta",{"property":"og:url","content":"https://noly1990.github.io/noly_station/noly_station/posts/embedded/pyocd_installation.html"}],["meta",{"property":"og:site_name","content":"Noly's Station"}],["meta",{"property":"og:title","content":"pyOCD的安装"}],["meta",{"property":"og:description","content":"本文介绍如何安装pyOCD以及pyOCD的简单使用。 官方网站 开源地址 安装pyOCD 常用命令 pyocd pack 用于pack包的管理， 包括安装、卸载、更新、搜索等。 一般使用 一般来说，我们需要针对不同的芯片，安装对应的pack包。安装完成以后再使用pyocd进行烧录或者调试。 这里我们拿最经典的STM32F103C8T6为例， 通过-f参..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Noly"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"pyOCD"}],["meta",{"property":"article:published_time","content":"2024-07-14T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pyOCD的安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-14T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Noly\\",\\"url\\":\\"/intro\\"}]}"]]},"headers":[{"level":2,"title":"安装pyOCD","slug":"安装pyocd","link":"#安装pyocd","children":[]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":2,"title":"一般使用","slug":"一般使用","link":"#一般使用","children":[]},{"level":2,"title":"烧录","slug":"烧录","link":"#烧录","children":[]},{"level":2,"title":"不安装，指定pack包烧录","slug":"不安装-指定pack包烧录","link":"#不安装-指定pack包烧录","children":[]},{"level":2,"title":"其他常见问题","slug":"其他常见问题","link":"#其他常见问题","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.27,"words":980},"filePathRelative":"posts/embedded/pyocd_installation.md","localizedDate":"2024年7月14日","excerpt":"<blockquote>\\n<p>本文介绍如何安装pyOCD以及pyOCD的简单使用。</p>\\n</blockquote>\\n<p><a href=\\"https://pyocd.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方网站</a></p>\\n<p><a href=\\"https://github.com/pyocd/pyOCD\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">开源地址</a></p>\\n<h2>安装pyOCD</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>// 安装pyOCD， 国内清华源\\npip <span class=\\"token function\\">install</span> pyOCD <span class=\\"token parameter variable\\">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple \\n</code></pre></div>","autoDesc":true}`);export{x as comp,D as data};
